{"blogs" :[
  {"id":"Blog Post 1","title":"Back to School","date":"2/27/2018","post":"Welcome to my blog. Here I will detail my journey as I experience Nashville Software School. We are about two weeks deep in the program and I can safely admit I made the right decision to join. We are off to a good start. It has been a challenging process of adjusting of the schedule from a work/life/school balance perspective. But week two felt much more natural. I am still finding my footing in this area but hopefully I can develop a cadence thats optimal for all fronts. On the second day of class we jumped right in covering HTML and CSS. It was mostly review from pre-work assignments. We then recreated a super chill website call CSS Zen Gardens. Following the CSS and HTML exercises we were introduced to the command line and GIT. Before class the command line was the application I would and immediately close. I knew it was a useful tool but I had zero comfort or need to use it. Now I am fairly comfortable navigating around and creating folders, I mean directories. GIT was entirely new to me. My best attempt at a description would be sharepoint, dropbox, and reddit all morphed into one application. Kinda- but not really. Logically the process of using git and github along with the command line made sense but it took a few days and practice to really sink in. That’s it for this week.. Looking forward to next week. We will tackle JavaScript."},
  {"id":"Blog Post 2","title":"Loops","date":"3/6/2018","post":"This week we found ourselves working with JavaScript. We covered mainly strings, arrays and array methods, and for loops. For loops are by the most interesting thing we covered yet. I cannot imagine the vast applications of it even with my limited perspective. This doesn’t mean I immediately understood it. We went over a few loop examples in class and I felt fairly comfortable working through the examples. Then I started the homework exercises... I spent an entire study group working on a single challenge and still didn’t finish. Jeffrey got the closest out of all of us but I couldn’t read his code or follow his logic. The long day of work then study group frustrated me. That night I didn’t get a good night’s rest. I woke many times with for loops on the brain. It was as if I were still working on the problem while asleep. The next morning I guess it clicked and I solved that exercise and a few more exercises.  There were so many ideas considered at the meetup I wasn’t able to commit to an approach to solve the problem. It was a learning experience. My approach since has been figure something out that works for you then you can always make the code better. NSS has been an adjustment time and schedule wise. I am getting use to the flow of things and hoping to make better use of my time in the weeks to come. The one thing that is easy to forget is sometimes you don’t get or learn things immediately. It takes time and i will take that with me continue to more challenging subjects."},{"id":"Blog Post 3","title":"GitHub for Teams: Fatal Error","date":"3/13/2018","post":"I can’t count how many times I said or heard “Should I git something something something” this week. We dove a little bit deeper in the GitHub processes. GitHub seemed simple enough when you were working on a project alone but that is not realistic.  We introduced the team aspect to the equation and all git confidence was lost, at least initially. GitHub project and wireframes for teams were demo in the form of a Dinosaur dating website. We also touched on advanced array methods and learned you can solve the same problem thousands of different ways. The “for each” method is a new tool in the toolbox but I think I still prefer the “for loop” at this point. At meetup we dove into the language translator exercise and put to test our GitHub project planning knowledge. The Language translator exercise was a real challenge for me and I am still working to complete. "},
  { "id": "Blog Post 4", "title": "Static-Web to Single Page Apps", "date":"3/27/2018", "post":" This week we covered our transition to ES6, DOM manipulation, and Markdown. ES6 updates our JavaScript syntax and introduces many undiscovered features. The most immediate change is arrow functions and the use of const and let in lieu of var for declaring variables. We were also introduced to event listeners and how to traverse the DOM properly. Inline event handlers we so tempting to use when trying to complete our Language Translator exercise. The exercise itself seemed to be pretty straightforward until I began to code. I made it way more difficult than I should have but eventually came around on the logic after seeing other people’s approach to solving the problem. We also touched on the language Markdown and how we would implement it into our current and future projects. This week’s most interesting thing for me has to be all the data and information that is logged on an event listener. I’m excited to dive into all that’s provided on future projects to really changes how the pages behave based on a user’s interaction. We also presented our static-web group project. Really proud of the hilarious content our team was able to come up with and showcase."}, { "id": "Blog Post 5", "title": "Where’s my data?", "date":"4/3/2018", "post":" This week the concepts JSON and XHR concepts were introduced in class. We are slowly moving towards state of having a large amount of data stored externally form our initial files. I can relate to the process since it directly correlates to some of the things i am doing currently as an data analyst. Pulling data hosted externally offers a greater flexibility in the actual data available. XMLHTTPRequests can be tricky. It was a learning process trying to extract the data for the request for you have to call it when it is available. I first learned how to make request using an IF statement. I think the code is more readable and easier to follow. Sorta synchronous code for asynchronous requests. I’m coming around on the event-listener route. I am excited to continue learning about these request. The applications are all over the web.We also created an solar system webpage that required some hover styling and multiple XHR calls."},{ "id": "Blog Post 6", "title": "Bootstrap and a Cage Match", "date":"4/9/2018", "post":"We started to work with bootstrap this week. Bootstrap is a powerful tool that allows projects to be styled responsively and mobile-first. It is very simple to implement into our current workflows. I have loathed styling with base CSS so this is definitely and upgrade. The bootstrap website is really rich with examples and documentation which is always helpful. We used bootstrap for our Treehouse Cage Match project this week. Enjoyed working on this project. The XHR request to treehouse gave it a real world application feel to it. Curious to try to do something like this with data from other websites. We compared two student’s treehouse points totals and displayed the winner’s badges. Really cool to see what the other student were able to create. Talking with my group mates really helped me sort out how I wanted to approach building the application."},{ "id": "Blog Post 7", "title": "Task Runners", "date":"4/17/2018", "post":"This week we were introduced to task runners. It is a dramatic shift in our coding process.  Now, with aid of task runners, we have automated multiple processes. My favorite is our code is now checked for errors via grunt. Also, browserify bundles all of our javascript files and minify/uglify our javascript and CSS. In the future, we will use it to convert SCSS into CSS and for deployment purposes. Adjusting to our new workflow had its fair share of growing pains. Mainly, I would forget to call functions or I had semantic errors. Previously, we would dump all of our javascript on one page. You don't really forget where things are located. Browserify splits all the code up based on purpose. Learning to require and export functions took time. Homework for this week required a XHR call and multiple event listeners. Talking the assignment through with my group mates was invaluable."},{ "id": "Blog Post 8", "title": "The New Norm", "date":"4/24/2018", "post":"This week we continued to get acquainted with browserify, grunt, and task runners processes as a whole. Last week was kind of a curve ball but I guess this is what the learning journey is all about. Constant adaptation. I reached a certain comfort level writing code and then we changed everything. Not drastically, but our approach is definitely different. It took a week, but it is the new normal now.  A week ago I didn't like task runners. Now I find them to be a necessary evil. Benefits definitely outweigh the inconvenience. I particularly like the error checking because I am prone to typos. This week's homework we were tasked to create and movie maker budget that feels like a culmination of all the concepts we've learned thus far. Also, we are beginning a new group project that requires us to build a chat application. I am excited to see what we can create and show off."},{ "id": "Blog Post 9", "title": "Chatty", "date":"5/1/2018", "post":"For our second group project, we were tasked with creating a dynamic chat application.  I thought we planned really well for the group effort. I was again a team leader this time around. I was able to take experiences from our last group project and apply those lessons learned to this second effort. We certainly spent more time hashing out the details of the code and how that would affect everyone and everything as a whole. It allowed us to finish most of our initial requirements fairly quickly. We even were able to add an enhancement at the last minute. Overall I was pleased with our final product but ultimately hoped to add more enhancements. I thought it would be a good challenge to tackle some of the more tougher enhancements. Also, the products of the other teams were impressive. Enjoyed seeing what others were able to come up with at demo day."},{ "id": "Blog Post 10", "title": "Jquery", "date":"5/15/2018", "post":"This week we finally implemented jQuery into our coding workflow.  JQuery was briefly introduced in our treehouse pre-work. It was introduced randomly and I didn’t quite grasp how it was to be used. I think at the time I didn’t completely understand DOM traversal and manipulation so JQuery’s value to me was unrealized. Now, I can’t wait to see how it further simplifies things like event listeners and complex CSS animations. The syntax is very easy but I still have to think about it when writing code because it is so new and I need more practice with it. Another important aspect of JQuery is Ajax. I am not so convinced this is a simpler code writing process than the XHR process but time will tell. I think it is pretty much the equivalent. "},{ "id": "Blog Post 11", "title": "Promises", "date":"5/22/2018", "post":"The week we introduced Promises. It is very similar to making XHR calls. Initially, i didn’t see much benefit to the new way, but as we complete more exercises and I grew more comfortable with the logic I find it to be useful. However, I don't believe the code to be more readable. I found doing research on this concept helped make sense of the new code structure. It also reinforces that there are multiple ways to do things. We are slowly moving towards databases and that's exciting. There one thing you learn over and over here is never get comfortable doing things a certain way. Coding one now may be approach but wont in the future. It keeps evolving as our scope changes. Next week will begin to use APIs. API’s in the past have been buzzwords. Excited to dive a little deeper and get some hands on experience."},{"id": "Blog Post 12", "title": "API", "date":"5/29/2018", "post":"The week we introduced APIs. I have heard about APIs for years but was never exactly sure what it was. It was a broad and general term that could be applied to numerous things. We successfully completed a API request from the movie site. Alot of our favorite software is great because of APIs. They are everywhere. Postman, a tool that lets you previews has been a invaluable. The ability to work with the dataset in practice before actually using it within code is critical. Reviewing the documentation is also helpful."},{ "id": "Blog Post 13", "title": "Firebase", "date":"6/5/2018", "post":"The week we introduced Firebase. Firebase is a web development platform with features such as storage, authentication, and databases. We are using the database tools to store data collected to build a movie wishlist and watch list. We finally have persistent data and expanding our CRUD skills. Persistent data will allow us to create smarter applications. Accessing the data is a another story. When data is added to the database object it creates a unique key. We have to loop over the object and key created to eventually access the key. Initially, it did not make sense but after attempting to access the object, it clicked."}
]
  }